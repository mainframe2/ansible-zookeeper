---
- name: "Ensure the tarball dir exists at {{zookeeper_tarball_dir}}"
  file: path={{zookeeper_tarball_dir}} state=directory

- name: "Ensure the zookeeper dir exists at {{zookeeper_dir}}"
  file: path={{zookeeper_dir}} state=directory

- name: Download zookeeper version.
  get_url: url={{zookeeper_url}} dest={{zookeeper_tarball_dir}}/zookeeper-{{zookeeper_version}}.tar.gz
  tags: bootstrap
  when: not mf2_offline_mode|bool

- name: Upload zookeeper source bundle
  synchronize: src="../offline_repos/other/zookeeper-{{zookeeper_version}}.tar.gz" dest={{zookeeper_tarball_dir}}
  when: mf2_offline_mode|bool

- name: Unpack tarball.
  command: tar zxf {{zookeeper_tarball_dir}}/zookeeper-{{zookeeper_version}}.tar.gz --strip-components=1 chdir={{zookeeper_dir}} creates={{zookeeper_dir}}/bin
  tags: bootstrap

- group: name=zookeeper system=yes
- user: name=zookeeper group=zookeeper system=yes

- name: Change ownership on zookeeper directory.
  file: path={{zookeeper_dir}} state=directory owner=zookeeper group=zookeeper recurse=yes
  tags: bootstrap

- name: Create zookeeper data folder.
  file: path={{data_dir}} state=directory recurse=yes owner=zookeeper group=zookeeper
  tags: bootstrap

- name: Create zookeeper logs folder.
  file: path={{log_dir}} state=directory recurse=yes owner=zookeeper group=zookeeper
  tags: bootstrap

- name: Write myid file.
  template: src=myid.j2 dest={{data_dir}}/myid owner=zookeeper group=zookeeper
  tags: deploy
  notify:
    - Restart zookeeper

- name: Configure zookeeper
  template: src=zoo.cfg.j2 dest={{ zookeeper_dir }}/conf/zoo.cfg owner=zookeeper group=zookeeper
  tags: deploy
  notify:
    - Restart zookeeper
